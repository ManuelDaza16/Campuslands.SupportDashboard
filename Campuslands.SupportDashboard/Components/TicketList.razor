@using Campuslands.SupportDashboard.Models

<div class="table-responsive">
    <table class="table align-middle mb-0">
        <thead>
            <tr>
                <th style="width: 60%">TÃ­tulo</th>
                <th style="width: 40%">Estado</th>
            </tr>
        </thead>
        <tbody>
            @if (Tickets is not null && Tickets.Count > 0)
            {
                foreach (var ticket in Tickets)
                {
                    var isActive = SelectedTicketId.HasValue && SelectedTicketId == ticket.Id;
                    <tr role="button" class="@("table-row" + (isActive ? " table-active" : string.Empty))" @onclick="() => OnSelect.InvokeAsync(ticket)">
                        <td class="fw-semibold">@ticket.Title</td>
                        <td>
                            <span class="badge rounded-pill @GetStatusBadge(ticket.Status)">@ticket.Status</span>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="2" class="text-center text-muted py-4">No hay tickets disponibles.</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="small text-muted mt-2">@Tickets?.Count ticket(s)</div>
    
</div>

@code {
    [Parameter] public List<Ticket> Tickets { get; set; } = new();
    [Parameter] public EventCallback<Ticket> OnSelect { get; set; }
    [Parameter] public int? SelectedTicketId { get; set; }

    private string GetStatusBadge(string status) => status switch
    {
        // Use bg-* for wider Bootstrap compatibility
        "Abierto" => "bg-primary",
        "En progreso" => "bg-warning text-dark",
        "Cerrado" => "bg-success",
        _ => "text-bg-secondary"
    };
}
